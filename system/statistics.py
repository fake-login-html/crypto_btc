from database.db_btc import DataBase
from system import SendMessage
from api.bybit import BitGetApi

def ref_stat():
    coll_usdt = BitGetApi().qty_account(coin='USDT').split('.')[0]

    statistics = DataBase().statistics()
    # —Ü–∏–∫–ª –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω—ã–π —Å–∏–≥–Ω–∞–ª–æ–≤
    stat_all = {}
    stat_like = {}
    raznica = {}
    summa_procentov = {}
    for st in statistics:

        proc = st[0]
        moneta = st[1]
        use = st[2]
        names = moneta + '_' + str(proc) # –î–õ–Ø –ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–Ø –ö–õ–Æ–ß–ï–ô –°–ü–ò–°–ö–ê
        # –≤—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        if names not in stat_all:
            stat_all[names] = 1
        else:
            stat_all[names] += 1
        # —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
        if use == True:
            if names not in stat_like:
                stat_like[names] = 1
            else:
                stat_like[names] += 1

    # —Å—á–∏—Ç–∞–µ–º —Ä–∞–∑–Ω–∏–∫—É –∏ —É—Å–ø–µ—à–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã
    for k in stat_all:
        raznica[k] = stat_all[k] - stat_like[k]
        proc = float(k.split('_')[1])
        summa_procentov[k] = round(stat_like[k] * proc, 1)

    # print(stat_all)
    # print(stat_like)
    # print(raznica)
    # print(summa_procentov)

    # —Å–æ–±–∏—Ä–∞–µ–º –≤ —Ç–µ–∫—Å—Ç
    header = ''
    dolg = 0
    prc = 0
    for k in stat_all:
        header += f'{k}: {stat_like[k]}/{stat_all[k]} {raznica[k]} {summa_procentov[k]}%\n'
        dolg += raznica[k]
        prc += summa_procentov[k]

    # —Å–æ–±–∏—Ä–∞–µ–º –∫—Ä—É—Å—ã –ø—Ä–æ–≥–Ω–æ–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–∂–∏–¥–∞–µ–º
    dolg_kyrs = {}
    for s in statistics:
        bl = s[2]
        if bl == False:
            if s[1] not in dolg_kyrs:
                dolg_kyrs[s[1]] = str(s[3])
            else:
                dolg_kyrs[s[1]] += ', ' + str(s[3])

    # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–µ–≤–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –≤ —Å—Ç—Ä–æ–∫—É(–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
    dolg_kyrs_str = ''
    if dolg_kyrs:
        for d in dolg_kyrs:
            dolg_kyrs_str += d + ': ' + dolg_kyrs[d] + ' | '

    sms = (f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤\n\n'
           f'{header}\n'
           f'–î–æ—Ö–æ–¥: {prc}%\n\n'
           f'–ü—Ä–æ–≥–Ω–æ–∑—ã –≤ —Ä–∞–±–æ—Ç–µ: {dolg}\n'
           f'{dolg_kyrs_str}\n\n'
           f'üíµ USDT: {coll_usdt} üíµ'
           )

    # –∏–∑–º–µ–Ω—è–µ–º –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    SendMessage.Refactor(sms)