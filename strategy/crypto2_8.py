# –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –Ω–∞ 2.8 –ø—Ä–æ—Ü–µ–Ω—Ç–∞, –≤ —Ç–µ—á–µ–Ω–∏–∏ 1 –¥–Ω—è, –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –Ω–∞ 1,4 –ø—Ä–æ—Ü–µ–Ω—Ç–∞
from database import db_ton as db
from api.bybit import ton_bybit
import datetime
from system import SendMessage, statistics


class Crypto_2_8:

    def __init__(self):
        self.moneta = {}

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ª–∏ –∫—É—Ä—Å —É—Å–ª–æ–≤–∏—è–º
    def check_procent(self, last_price):

        # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∏–≥–Ω–∞–ª—ã –∑–∞ –∫—Ä–∞–π–Ω–∏–µ 2 –¥–Ω—è
        signal = db.DataBase().signal_check_2_8()
        # –µ—Å–ª–∏ –Ω–µ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞ –∫—Ä–∞–π–Ω–∏–µ 2 –¥–Ω—è, –¥–æ–±–∞–≤–ª—è–µ–º
        if not signal:
            # –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –∑–∞ –∫—Ä–∞–π–Ω–∏–µ —Å—É—Ç–∫–∏
            max_db = db.DataBase().price_check_2_8()[0][0]
            proc = 100 - ((last_price / max_db) * 100)
            print('[2.8] –†–∞–∑–Ω–∏—Ü–∞ –æ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã –∫—É—Ä—Å–∞ –∑–∞ –∫—Ä–∞–π–Ω–∏–µ —Å—É—Ç–∫–∏',round(proc, 2))
            # –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω 4, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ –ø–æ–∫—É–ø–∫–µ
            if proc >= 2.8:#4:
                Crypto_2_8().signal_add(last_price, proc)
        # –µ—Å–ª–∏ —Å–∏–≥–Ω–∞–ª –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –±–æ–ª—å—à–µ –Ω–∞ 4 –ø—Ä–æ—Ü–µ–Ω—Ç–∞, –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
        else:
            # –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–∞–π–Ω–µ–≥–æ —Å–∏–≥–Ω–∞–ª–∞
            signal_db =  signal[0][2] #[0][3] 15.11.2024
            # –µ—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ 4 –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ –±–¥
            proc = round(100 - ((last_price / signal_db) * 100), 2)
            print('[2.8] –†–∞–∑–Ω–∏—Ü–∞ –æ—Ç –∫—Ä–∞–π–Ω–µ–≥–æ —Å–∏–Ω–∞–ª–∞ –∑–∞ 1 –¥–µ–Ω—å', round(proc, 2))
            if proc >= 2.8:#4:
                Crypto_2_8().signal_add(last_price, proc)


    # –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –≤ –±–¥
    def signal_add(self, last_price, proc):

        self.moneta['price'] =last_price
        self.moneta['date'] = datetime.datetime.now()
        self.moneta['moneta'] = 'TON'
        self.moneta['signal'] = round(last_price + ((last_price / 100) * 1.4), 2)
        self.moneta['proc'] = proc

        # –ø–æ–∫—É–ø–∞–µ–º –∫—Ä–∏–ø—Ç—É –ø–æ —Ä—ã–Ω–∫—É –∏ —Å—Ä–∞–∑—É —Å—Ç–∞–≤–∏–º –ª–∏–º–∏—Ç–Ω—ã–π –æ—Ä–¥–µ—Ä –Ω–∞ –ø—Ä–æ–¥–∞–∂—É
        order_id = ton_bybit(qty_buy=10000, price_shell=self.moneta['signal'])
        self.moneta['order_id'] = order_id

        # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–¥
        db.DataBase().signal_add_2_8(self.moneta)

        sms = f'üõë –í–ù–ò–ú–ê–ù–ò–ï!!! üõë\n\n' \
            f'üìö –í —Ç–µ—á–µ–Ω–∏–∏ 48 —á–∞—Å–æ–≤ {self.moneta['moneta']} —É–ø–∞–ª –Ω–∞ {round(self.moneta['proc'], 2)}% üìö \n\n' \
            f'‚¨ÜÔ∏è –í—Ö–æ–¥ {self.moneta['price']} ‚¨ÜÔ∏è \n' \
            f'üî• –ü—Ä–æ–¥–∞–∂–∞ {self.moneta['signal']} (+1.4%) üî•\n\n'\
            f'üï∞ {self.moneta['date']} üï∞'

        # –æ—Ç–ø—Ä–∞–≤–ª–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        SendMessage.Send(sms)
        # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Ç—Å—Ç–∏–∫—É
        statistics.ref_stat()
